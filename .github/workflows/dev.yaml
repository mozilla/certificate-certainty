name: "[WIP] Build image"

on:
  push: {}
  workflow_dispatch: {}

env:
  APP: certificate-certainty
  APPLICATION_REPOSITORY: mozilla/certificate-certainty
  GAR_LOCATION: us-central1
  GAR_REPOSITORY: certificate-certainty
  GCP_PROJECT_ID: hwine-cc-dev
  IMAGE: cc-cont-x86_64
  REF: main
  RUN_ID: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  SLACK_CHANNEL_ID: C04FGNB8CUX  #hwine-dev-private

jobs:
  build_image:
    name: Build Image - Latest
    runs-on: ubuntu-latest
    environment: build
    permissions:
      contents: read
      id-token: write
        #if:  github.event.deployment.environment == 'dev' || github.event_name == 'workflow_dispatch'
    outputs:
      short_sha: ${{ steps.short-sha.outputs.SHORT_SHA }}

    steps:
      - id: slack
        name: notify slack
        uses: mozilla-it/deploy-actions/slack@v3
        with:
          app_name: ${{ env.APP }}
          env_name: 'dev'
          channel_id: ${{ env.SLACK_CHANNEL_ID }}
          type: 'start'
          ref: ${{ env.REF }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN_BUGID_1796141_20221019 }}
        if: always()

      - id: checkout-application-repo
        uses: actions/checkout@v3
        with:
          path: src
          repository: ${{ env.APPLICATION_REPOSITORY }}
            #ref: ${{ env.REF }}

      - id: short-sha
        run: |-
          cd src && echo "SHORT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: 'Docker build'
        run: |-
          cd src &&
          git status --no-untracked-files &&
          git status --porcelain --untracked-files=no &&
          make build-prod

      - id: gcp-auth
        uses: google-github-actions/auth@v0
        with:
          token_format: 'access_token'
          service_account: artifact-writer@${{ env.GCP_PROJECT_ID}}.iam.gserviceaccount.com
          workload_identity_provider: projects/324168772199/locations/global/workloadIdentityPools/github-actions/providers/github-actions  # pragma: allowlist secret

      - uses: docker/login-action@v2
        name: Docker login
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Docker push
        run: |-
          docker push $GAR_LOCATION-docker.pkg.dev/$GCP_PROJECT_ID/$GAR_REPOSITORY/$IMAGE:${{ steps.short-sha.outputs.SHORT_SHA }}
